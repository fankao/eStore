plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.packt.modern'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

swaggerSources {
    def typeMappings = 'URI=URI'
    def importMappings = 'URI=java.net.URI'
    eStore {
        def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
        def configJson = "${rootDir}/ src / main / resources / api/config.json"
        inputFile = file(apiYaml)
        def ignoreFile = file("${rootDir}/ src / main / resources / api /.openapi-generator-ignore")
        code {
            language = 'spring'
            configFile = file(configJson)
            rawOptions = ['--ignore-file-override', ignoreFile,
                          '--type-mappings',
                          typeMappings, '--import-mappings', importMappings] as
                    List<String>
            components = [models: true, apis: true, supportingFiles:
                    'ApiUtil.java']
            / / depends On validation // Should be uncommented once
            //plugin starts supporting OA 3 validation
        }
    }
}

compileJava.dependsOn swaggerSources.eStore.code



repositories {
    mavenCentral()
}

dependencies {
    //Open API setup
    swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
    compileOnly 'io.swagger:swagger-annotations:1.6.2'
    compileOnly 'org.springframework.boot:spring-boot-startervalidation'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'com.fasterxml.jackson.dataformat:jacksondataformat-xml'
    implementation 'org.springframework.boot:spring-boot-starterhateoas'
    //-----------------------

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
